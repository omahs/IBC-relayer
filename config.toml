# The global section has parameters that apply globally to the relayer operation.
[global]

# Specify the verbosity for the relayer logging output. Default: 'info'
# Valid options are 'error', 'warn', 'info', 'debug', 'trace'.
log_level = 'info'


# Specify the mode to be used by the relayer. [Required]
[mode]

# Specify the client mode.
[mode.clients]

# Whether or not to enable the client workers. [Required]
enabled = true

# Whether or not to enable periodic refresh of clients. [Default: true]
# Note: Even if this is disabled, clients will be refreshed automatically if
#      there is activity on a connection or channel they are involved with.
refresh = true

# Whether or not to enable misbehaviour detection for clients. [Default: false]
misbehaviour = true

# Specify the connections mode.
[mode.connections]

# Whether or not to enable the connection workers for handshake completion. [Required]
enabled = false

# Specify the channels mode.
[mode.channels]

# Whether or not to enable the channel workers for handshake completion. [Required]
enabled = false

# Specify the packets mode.
[mode.packets]

# Whether or not to enable the packet workers. [Required]
enabled = true

# Parametrize the periodic packet clearing feature.
# Interval (in number of blocks) at which pending packets
# should be eagerly cleared. A value of '0' will disable
# periodic packet clearing. [Default: 100]
clear_interval = 100

# Whether or not to clear packets on start. [Default: false]
clear_on_start = true

# Toggle the transaction confirmation mechanism.
# The tx confirmation mechanism periodically queries the `/tx_search` RPC
# endpoint to check that previously-submitted transactions
# (to any chain in this config file) have delivered successfully.
# Experimental feature. Affects telemetry if set to false.
# [Default: true]
tx_confirmation = true

# The REST section defines parameters for Hermes' built-in RESTful API.
# https://hermes.informal.systems/rest.html
[rest]

# Whether or not to enable the REST service. Default: false
enabled = true

# Specify the IPv4/6 host over which the built-in HTTP server will serve the RESTful
# API requests. Default: 127.0.0.1
host = '127.0.0.1'

# Specify the port over which the built-in HTTP server will serve the restful API
# requests. Default: 3000
port = 3000


# The telemetry section defines parameters for Hermes' built-in telemetry capabilities.
# https://hermes.informal.systems/telemetry.html
[telemetry]

# Whether or not to enable the telemetry service. Default: false
enabled = true

# Specify the IPv4/6 host over which the built-in HTTP server will serve the metrics
# gathered by the telemetry service. Default: 127.0.0.1
host = 'x.x.x.x' ## Specify your monitoring (prometheus/grafana) IP

# Specify the port over which the built-in HTTP server will serve the metrics gathered
# by the telemetry service. Default: 3001
port = 3001


# A chains section includes parameters related to a chain and the full node to which
# the relayer can send transactions and queries.

# This section specifies the filters for policy based relaying.
#
# Default: no policy / filters, allow all packets on all channels.
#
# Only packet filtering based on channel identifier can be specified.
# A channel filter has two fields:
# 1. `policy` - one of two types are supported:
#       - 'allow': permit relaying _only on_ the port/channel id in the list below,
#       - 'deny': permit relaying on any channel _except for_ the list below.
# 2. `list` - the list of channels specified by the port and channel identifiers.
#
# Example configuration of a channel filter, denying packet relaying on channel with port ID 'transfer' and channel ID 'channel-0':
#
# [chains.packet_filter]
# policy = 'deny'
# list = [
#   ['transfer', 'channel-0'],
# ]

# Specify that the transaction fees should be payed from this fee granter's account.
# Optional. If unspecified (the default behavior), then no fee granter is used, and
# the account specified in `key_name` will pay the tx fees for all transactions
# submitted to this chain.
# fee_granter = ''

[[chains]]
id = 'osmosis-1'
rpc_addr = 'http://127.0.0.1:49957'
grpc_addr = 'http://127.0.0.1:9060'
websocket_addr = 'ws://127.0.0.1:49957/websocket'
rpc_timeout = '20s'
account_prefix = 'osmo'
key_name = 'swu-osmosis'
store_prefix = 'ibc'
max_tx_size = 1800000
default_gas = 400000
max_gas = 120000000
gas_price = { price = 0.01, denom = 'uosmo' }
#gas_adjustment = 0.2
gas_multiplier = 1.5
max_msg_num = 30
clock_drift = '15s'
max_block_time = '10s'
trusting_period = '7days'
trust_threshold = { numerator = '1', denominator = '3' }
address_type = { derivation = 'cosmos' }
memo_prefix = 'Relayed by StakeWith.Us, earn yield on unagii.com'
[chains.packet_filter]
policy = 'allow'
list = [
 ['transfer', 'channel-0'], # cosmoshub-4
 ['transfer', 'channel-4'], # core-1
 ['transfer', 'channel-42'], # juno-1  
 ['transfer', 'channel-204'], # evmos_9001-2
 ['transfer', 'channel-122'], # injective-1
 ['ica*','*'], # allow relaying on all channels whose port starts with `ica`
]

[[chains]]
id = 'cosmoshub-4'
rpc_addr = 'http://127.0.0.1:47757'
grpc_addr = 'http://127.0.0.1:9050'
websocket_addr = 'ws://127.0.0.1:47757/websocket'
rpc_timeout = '30s'
account_prefix = 'cosmos'
key_name = 'swu-cosmos'
store_prefix = 'ibc'
default_gas = 300000
max_gas = 3500000
gas_price = { price = 0.0025, denom = 'uatom' }
#gas_adjustment = 0.1
gas_multiplier = 1.2
max_msg_num = 30
clock_drift = '20s'
max_block_time = '10s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
address_type = { derivation = 'cosmos' }
memo_prefix = 'Relayed by StakeWith.Us, earn yield on unagii.com'
[chains.packet_filter]
policy = 'allow'
list = [
  ['transfer', 'channel-141'], # osmosis-1
   ['transfer', 'channel-207'], # juno-1
   ['transfer', 'channel-292'], # evmos_9001-2
]

[[chains]]
id = 'juno-1'
rpc_addr = 'http://127.0.0.1:52257'
grpc_addr = 'http://127.0.0.1:9030'
websocket_addr = 'ws://127.0.0.1:52257/websocket'
rpc_timeout = '30s'
account_prefix = 'juno'
key_name = 'swu-juno'
store_prefix = 'ibc'
default_gas = 100000
max_gas = 2000000
gas_price = { price = 0.0025, denom = 'ujuno' }
#gas_adjustment = 0.1
gas_multiplier = 1.1
max_msg_num = 30
clock_drift = '15s'
max_block_time = '10s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
address_type = { derivation = 'cosmos' }
memo_prefix = 'Relayed by StakeWith.Us, earn yield on unagii.com'
[chains.packet_filter]
policy = 'allow'
list = [
   ['transfer', 'channel-1'], # cosmoshub-4
   ['transfer', 'channel-0'], # osmosis-1
   ['transfer', 'channel-59'], # injective-1
]

[[chains]]
id = 'evmos_9001-2'
rpc_addr = 'http://127.0.0.1:45557'
grpc_addr = 'http://127.0.0.1:9068'
websocket_addr = 'http://127.0.0.1:45557/websocket'
rpc_timeout = '30s'
account_prefix = 'evmos'
key_name = 'swu-evmos'
store_prefix = 'ibc'
default_gas = 100000
max_gas = 5000000
gas_price = { price = 20000000000, denom = 'aevmos' }
#gas_adjustment = 0.1
gas_multiplier = 1.1
max_msg_num = 30
clock_drift = '15s'
max_block_time = '10s'
trusting_period = '10days'
trust_threshold = { numerator = '1', denominator = '3' }
address_type = { derivation = 'ethermint', proto_type = { pk_type = '/ethermint.crypto.v1.ethsecp256k1.PubKey' } }
memo_prefix = 'Relayed by StakeWith.Us, earn yield on unagii.com'
[chains.packet_filter]
policy = 'allow'
list = [
  ['transfer', 'channel-3'], # cosmoshub-4
  ['transfer', 'channel-0'], # osmosis-1
]

[[chains]]
id = 'injective-1'
rpc_addr = 'http://127.0.0.1:40057'
grpc_addr = 'http://127.0.0.1:9900'
websocket_addr = 'ws://127.0.0.1:40057/websocket'
rpc_timeout = '20s'
account_prefix = 'inj'
key_name = 'swu-injective'
address_type = { derivation = 'ethermint', proto_type = { pk_type = '/injective.crypto.v1beta1.ethsecp256k1.PubKey' } }
store_prefix = 'ibc'
default_gas = 100000
max_gas = 5000000
gas_price = { price = 500000000, denom = 'inj' }
#gas_adjustment = 0.2
gas_multiplier = 1.1
max_msg_num = 30
max_tx_size = 2097152
clock_drift = '15s'
max_block_time = '10s'
trusting_period = '14days'
memo_prefix = 'Relayed by StakeWith.Us, earn yield on unagii.com'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [
  ['transfer', 'channel-8'], # Osmosis
  ['transfer', 'channel-82'], # Core-1 (Persistence)
  ['transfer', 'channel-78'], # Juno-1
  ['oracle', 'channel-3'], # LAOZI-MAINNET
]

[[chains]]
id = 'core-1'
rpc_addr = 'http://127.0.0.1:44457'
grpc_addr = 'http://127.0.0.1:9010'
websocket_addr = 'ws://127.0.0.1:44457/websocket'
rpc_timeout = '30s' 
account_prefix = 'persistence'
key_name = 'swu-persistence'
store_prefix = 'ibc'
default_gas = 100000
max_gas = 2000000
gas_price = { price = 0.001, denom = 'uxprt' }
#gas_adjustment = 0.1
gas_multiplier = 1.1
max_msg_num = 30
clock_drift = '15s'
max_block_time = '10s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
address_type = { derivation = 'cosmos' }
memo_prefix = 'Relayed by StakeWith.Us, earn yield on unagii.com'
[chains.packet_filter]
policy = 'allow'
list = [
   ['transfer', 'channel-6'], # osmosis-1
   ['transfer', 'channel-41'], # Injective-1
   ['ica*','*'], # allow relaying on all channels whose port starts with `ica`
]

[[chains]]
id = 'laozi-mainnet'
rpc_addr = 'http://localhost:58857'
grpc_addr = 'http://localhost:9038'
websocket_addr = 'ws://localhost:58857/websocket'
rpc_timeout = '10s'
account_prefix = 'band'
key_name = 'swu-band'
store_prefix = 'ibc'
default_gas = 100000
max_gas = 6666720
gas_price = { price = 0, denom = 'uband' }
#gas_adjustment = 0.1
gas_multiplier = 1.5
max_msg_num = 6
max_tx_size = 2097152
clock_drift = '5s'
max_block_time = '10s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
address_type = { derivation = 'cosmos' }
memo_prefix = 'Relayed by StakeWith.Us, earn yield on unagii.com'
[chains.packet_filter]
policy = 'allow'
list = [
   ['oracle', 'channel-7'], # Injective-1
]
